(defparameter *open* '())
(defparameter *memory* '())
(defparameter *id* 0)
(defparameter *ops* ((:arriba "^")
		     (:abajo "v")
		     (:izquierda "<")
		     (:derecha ">")))
(defparameter  *current-ancestor*  nil)
(defparameter  *solucion*  nil)
(defparameter *countNodos* 0)
(defparameter *contadorExpandir* 0)
(defparameter *contadorFronteraBusqueda* 0)
(defparameter *tiempoInicial* 0)
(defparameter *tiempoFinal* 0)

(defun create-node (estado operador fichas)
  (incf *id*)
  (incf *countNodos*)
  (list (1- *id*) estado *current-ancestor* (first operador) fichas))

(defun where-is-x (estado)
  "Funci칩n que nos permite saber donde est치 x"
  (let ((filax 0)
	(casillax 0))
    (dolist (fila estado)
      (if (or (equal (first fila) 'x) (equal (second fila) 'x) (equal (third fila) 'x))
	  (cond ((equal (first fila) 'x) (return (list filax casillax)))
		((equal (second fila) 'x) (return (list filax (setq casillax (1+ casillax)))))
		(T (return (list filax (setq casillax (+ 2 casillax))))))
	  (setq filax (1+ filax))))))


(defun up (estado)
  "Funci칩n que mueve x hacia arriba en el tablero"
  (let* ((filax (first (where-is-x estado)))
	 (casillax (second (where-is-x estado)))
	 (filatarget (nth (1- filax) estado))
	 (elemtarget (nth casillax filatarget))
	 (filaconx (nth filax estado)))
    (if (= filax 1)
	(list (substitute 'x elemtarget filatarget)
	      (substitute elemtarget 'x filaconx)
	      (third estado))
	(list (first estado)
	      (substitute 'x elemtarget filatarget)
	      (substitute elemtarget 'x filaconx)))))

(defun down (estado)
  "Funci칩n que mueve x hacia abajo en el tablero"
   (let* ((filax (first (where-is-x estado)))
	 (casillax (second (where-is-x estado)))
	 (filatarget (nth (1+ filax) estado))
	 (elemtarget (nth casillax filatarget))
	 (filaconx (nth filax estado)))
     (if (= filax 0)
	 (list (substitute elemtarget 'x filaconx)
	       (substitute 'x elemtarget filatarget)
	       (third estado))
	(list (first estado)
	      (substitute elemtarget 'x filaconx)
	      (substitute 'x elemtarget filatarget)))))
